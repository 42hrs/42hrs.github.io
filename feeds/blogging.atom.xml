<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>42HOURS.IN</title><link href="http://blog.42hrs.in/" rel="alternate"></link><link href="http://blog.42hrs.in/feeds/blogging.atom.xml" rel="self"></link><id>http://blog.42hrs.in/</id><updated>2014-12-10T00:00:00+01:00</updated><entry><title>Blogging with Markdown, Pelican and GitHub pages: Part 1</title><link href="http://blog.42hrs.in/blogging-with-markdown-pelican-and-github-pages-part-1.html" rel="alternate"></link><updated>2014-12-10T00:00:00+01:00</updated><author><name>42hrs.in</name></author><id>tag:blog.42hrs.in,2014-12-10:blogging-with-markdown-pelican-and-github-pages-part-1.html</id><summary type="html">&lt;p&gt;Pelican is a static site generator. It accepts lightly formatted plain text files, like 
   &lt;a href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt; or &lt;a href="http://docutils.sourceforge.net/rst.html"&gt;reStructuredText&lt;/a&gt;,
   and generate static pages which can be hosted almost everywhere. If you have a GitHub profile, you can write articles at
   the comfort of your favorite IDE and publish them on &lt;a href="https://pages.github.com/"&gt;GitHub pages&lt;/a&gt; with couple of commands.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This is pretty much what happens:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You write articles to &lt;code&gt;content/&lt;/code&gt; subdirectory.&lt;/li&gt;
&lt;li&gt;Pelican reads &lt;code&gt;content/&lt;/code&gt; and outputs HTML pages to &lt;code&gt;output/&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Files in &lt;code&gt;output/&lt;/code&gt; are published on GitHub&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="groundwork"&gt;Groundwork&lt;a class="headerlink" href="#groundwork" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Install Python and PIP&lt;/p&gt;
&lt;h2 id="github-repository-and-branches"&gt;GitHub repository and branches&lt;a class="headerlink" href="#github-repository-and-branches" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Pages on GitHub are nothing but HTML and static files residing inside a repository. The repo has to follow the naming convention
   &lt;code&gt;&amp;lt;your-username&amp;gt;.github.io&lt;/code&gt;. My username is &lt;code&gt;42hrs&lt;/code&gt; and hence &lt;code&gt;42hrs.github.io&lt;/code&gt; should be the name of this repo.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Instructions to create the repo goes here&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;After everything's done &lt;a href="http://42hrs.github.io"&gt;http://42hrs.github.io&lt;/a&gt; is where this blog would live (I've setup 
   a custom domain, but more on that later). Github looks for the HTML files at the root of the &lt;code&gt;master&lt;/code&gt; branch of this repo.&lt;/p&gt;
&lt;p&gt;Now, clone the repository.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/42hrs/42hrs.github.io.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;42hrs.github.io/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;One of GitHub's rules is that HTML pages have to reside at the root of the &lt;code&gt;master&lt;/code&gt; branch of your repository. But Pelican 
   outputs the HTML to a subdirectory &lt;code&gt;output/&lt;/code&gt; and also has other type of files at the root. So that's not acceptable.&lt;/p&gt;
&lt;p&gt;Forget about &lt;code&gt;master&lt;/code&gt; for the timebeing, and create and checkout a new branch, &lt;code&gt;source&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout -b &lt;span class="nb"&gt;source&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Always make sure you're on &lt;code&gt;source&lt;/code&gt; before you do anything. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git branch 
  master    &lt;span class="c"&gt;# Sacred; Only for the final HTML and static files.&lt;/span&gt;
* &lt;span class="nb"&gt;source&lt;/span&gt;    &lt;span class="c"&gt;# For Markdown and other pelican-specific files&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="installation"&gt;Installation&lt;a class="headerlink" href="#installation" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Virtualenv is not necessary, but is recommended. &lt;em&gt;I'm also using Virtualenvwrapper.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Create a new environment, and install the required packages.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkvirtualenv pelican
&lt;span class="nv"&gt;$ &lt;/span&gt;workon pelican
&lt;span class="nv"&gt;$ &lt;/span&gt;setvirtualenvproject
&lt;span class="nv"&gt;$ &lt;/span&gt;pip install pelican Markdown ghp-import
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="pelican-quickstart"&gt;Pelican Quickstart&lt;a class="headerlink" href="#pelican-quickstart" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Pelican comes with a handy command &lt;code&gt;pelican-quickstart&lt;/code&gt; which sets up a complete project for your blog based on answers to 
   a few questions.&lt;/p&gt;
&lt;p&gt;Make sure you do &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pelican quickstart
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="writing-content"&gt;Writing content&lt;a class="headerlink" href="#writing-content" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;touch content/hello-world.md
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="viewing-in-browser"&gt;Viewing in browser&lt;a class="headerlink" href="#viewing-in-browser" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;make html
&lt;span class="nv"&gt;$ &lt;/span&gt;make devserver
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="publishing-to-github"&gt;Publishing to GitHub&lt;a class="headerlink" href="#publishing-to-github" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;make publish github
&lt;/pre&gt;&lt;/div&gt;</summary><category term="blogging"></category><category term="pelican"></category><category term="markdown"></category><category term="github-pages"></category></entry></feed>